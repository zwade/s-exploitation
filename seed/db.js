let nconf       = require("nconf");
let MongoClient = require("mongodb").MongoClient;

let database = undefined;
let sleep = (millis) => new Promise(resolve => setTimeout(resolve, millis));
nconf.argv().env()

let domain = nconf.get("DB_URL") || "localhost"

let getDb = (db) => {
	let tryFn = () => 
		MongoClient.connect(`mongodb://${domain}:27017`)
			.then(client => {
				database = client;
				return client;
			}).catch(e => {
				console.log(`Failure: ${e}`);
				return sleep(1000).then(tryFn);
			})
	let promise = database === undefined ? tryFn() : Promise.resolve(database) 
	return promise
		.then(client => client.db(db))
		.then((db) => new Proxy(db, {
				get: (obj, entry) => obj.collection(entry)
			}))
}


let moa = () => getDb("moa").then(async db => {
	await db.moa.update({
		name: "admin",
	}, {
		name: "admin",
		hashedPass: "no",
		email: "admin@admin.admin",
		color: "-----not available here-----",
		food:  "-----not available here-----",
	}, {
		upsert: true,	
	})
})

let updator = () => getDb("upd8t0r").then(async db => {
	await db.posts.remove({});
	await db.xss.remove({});
	await db.users.update({
		username: "admin",
	}, {
		username: "admin",
		hashedPass: "no",
	}, {
		upsert: true,
	})
})

let all = async() => {
	console.log("Starting");
	await moa();
	console.log("Added moa admin");
	await updator();
	console.log("Added updator admin");
	process.exit(0);
}

all();
